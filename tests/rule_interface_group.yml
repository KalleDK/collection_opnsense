---

- name: Testing Interface Groups
  hosts: localhost
  gather_facts: no
  module_defaults:
    group/ansibleguy.opnsense.all:
      firewall: "{{ lookup('ansible.builtin.env', 'TEST_FIREWALL') }}"
      api_credential_file: "{{ lookup('ansible.builtin.env', 'TEST_API_KEY') }}"
      ssl_verify: false

    ansibleguy.opnsense.list:
      target: 'rule_interface_group'

  tasks:
    - name: Listing
      ansibleguy.opnsense.list:
      register: opn_pre1
      failed_when: >
        'data' not in opn_pre1 or
        opn_pre1.data | length != 2

    - name: Removing - does not exist
      ansibleguy.opnsense.rule_interface_group:
        name: 'ANSIBLE_TEST'
        state: 'absent'
      register: opn_pre2
      failed_when: >
        opn_pre2.failed or
        opn_pre2.changed

    - name: Adding 1 - failing because of invalid interface (server-side)
      ansibleguy.opnsense.rule_interface_group:
        name: 'ANSIBLE_TEST'
        members:
          - 'lan'
      register: opn_fail1
      failed_when: not opn_fail1.failed
      when: not ansible_check_mode

    - name: Adding 1 - failing because of missing members
      ansibleguy.opnsense.rule_interface_group:
        name: 'ANSIBLE_TEST'
      register: opn_fail2
      failed_when: not opn_fail2.failed

    - name: Adding 1
      ansibleguy.opnsense.rule_interface_group:
        name: 'ANSIBLE_TEST'
        members: 
          - 'vtnet0'
      register: opn1
      failed_when: >
        opn1.failed or
        not opn1.changed

    - name: Adding 1 - nothing changed
      ansibleguy.opnsense.rule_interface_group:
        name: 'ANSIBLE_TEST'
        members: 
          - 'vtnet0'
      register: opn2
      failed_when: >
        opn2.failed or
        opn2.changed
      when: not ansible_check_mode

    - name: Listing
      ansibleguy.opnsense.list:
      register: opn3
      failed_when: >
        'data' not in opn3 or
        opn3.data | length != 3
      when: not ansible_check_mode

    - name: Cleanup
      ansibleguy.opnsense.rule_interface_group:
        name: 'ANSIBLE_TEST'
        state: 'absent'
      when: not ansible_check_mode

    - name: Listing
      ansibleguy.opnsense.list:
      register: opn_clean1
      failed_when: >
        'data' not in opn_clean1 or
        opn_clean1.data | length != 2
      when: not ansible_check_mode
