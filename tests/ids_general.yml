---

- name: Testing IDS General
  hosts: localhost
  gather_facts: no
  module_defaults:
    group/ansibleguy.opnsense.all:
      firewall: "{{ lookup('ansible.builtin.env', 'TEST_FIREWALL') }}"
      api_credential_file: "{{ lookup('ansible.builtin.env', 'TEST_API_KEY') }}"
      ssl_verify: false

    ansibleguy.opnsense.list:
      target: 'ids_general'

  tasks:
    - name: Listing
      ansibleguy.opnsense.list:
      register: opn_pre1
      failed_when: >
        opn_pre1.failed or
        'data' not in opn_pre1

    - name: Adding 1 - failing because of missing interfaces
      ansibleguy.opnsense.ids_general:
        interfaces: []
        enabled: true
      register: opn_fail1
      failed_when: not opn_fail1.failed

    - name: Adding 1 - failing because of invalid local-network
      ansibleguy.opnsense.ids_general:
        interfaces: ['LAN']
        enabled: true
        local_networks: ['invalid']
      register: opn_fail2
      failed_when: not opn_fail2.failed

    - name: Adding 1 - failing because of too low packet-size
      ansibleguy.opnsense.ids_general:
        interfaces: ['LAN']
        enabled: true
        default_packet_size: 12
      register: opn_fail3
      failed_when: not opn_fail3.failed

    - name: Adding 1 - failing because of non-existing cron (server-side)
      ansibleguy.opnsense.ids_general:
        interfaces: ['LAN']
        enabled: true
        schedule: 'DOES-NOT-EXIST'
      register: opn_fail4
      failed_when: not opn_fail4.failed
      when: not ansible_check_mode

    - name: Adding 1
      ansibleguy.opnsense.ids_general:
        interfaces: ['opt1']
        enabled: true
        pattern_matcher: 'ac'
        profile: 'low'
        local_networks: ['10.0.0.0/16']
        log_rotate: 'daily'
        log_retention: 14
        syslog: true
        log_level: 'info'
        profiling: true
        debug: true
      register: opn1
      failed_when: >
        opn1.failed or
        not opn1.changed

    - name: Changing 1
      ansibleguy.opnsense.ids_general:
        interfaces: ['opt1']
        enabled: true
        block: true
        pattern_matcher: 'ac-bs'
        profile: 'medium'
        local_networks: ['10.0.0.0/16']
        log_rotate: 'daily'
        log_retention: 10
        syslog: true
        syslog_output: true
        log_level: 'info'
      register: opn9
      failed_when: >
        opn9.failed or
        not opn9.changed

    - name: Disabling 1
      ansibleguy.opnsense.ids_general:
        interfaces: ['opt1']
        enabled: false
        block: true
        pattern_matcher: 'ac-bs'
        profile: 'medium'
        local_networks: ['10.0.0.0/16']
        log_rotate: 'daily'
        log_retention: 10
        syslog: true
        syslog_output: true
        log_level: 'info'
      register: opn2
      failed_when: >
        opn2.failed or
        not opn2.changed
      when: not ansible_check_mode

    - name: Disabling 1 - nothing changed
      ansibleguy.opnsense.ids_general:
        interfaces: ['opt1']
        enabled: false
        block: true
        pattern_matcher: 'ac-bs'
        profile: 'medium'
        local_networks: ['10.0.0.0/16']
        log_rotate: 'daily'
        log_retention: 10
        syslog: true
        syslog_output: true
        log_level: 'info'
      register: opn3
      failed_when: >
        opn3.failed or
        opn3.changed
      when: not ansible_check_mode

    - name: Enabling 1
      ansibleguy.opnsense.ids_general:
        interfaces: ['opt1']
        block: true
        pattern_matcher: 'ac-bs'
        profile: 'medium'
        local_networks: ['10.0.0.0/16']
        log_rotate: 'daily'
        log_retention: 10
        syslog: true
        syslog_output: true
        log_level: 'info'
      register: opn4
      failed_when: >
        opn4.failed or
        not opn4.changed
      when: not ansible_check_mode

    - name: Cleanup
      ansibleguy.opnsense.ids_general:
        interfaces: ['opt1']
        enabled: false
      when: not ansible_check_mode
