---

- name: Testing IPSec tunnels/connections
  hosts: localhost
  gather_facts: no
  module_defaults:
    group/ansibleguy.opnsense.all:
      firewall: "{{ lookup('ansible.builtin.env', 'TEST_FIREWALL') }}"
      api_credential_file: "{{ lookup('ansible.builtin.env', 'TEST_API_KEY') }}"
      ssl_verify: false

    ansibleguy.opnsense.list:
      target: 'ipsec_connection'

  tasks:
    - name: Listing
      ansibleguy.opnsense.list:
      register: opn_pre1
      failed_when: >
        'data' not in opn_pre1 or
        opn_pre1.data | length != 0

    - name: Removing - does not exist
      ansibleguy.opnsense.ipsec_connection:
        name: 'ANSIBLE_TEST_1_1'
        state: 'absent'
      register: opn_pre2
      failed_when: >
        opn_pre2.failed or
        opn_pre2.changed

    - name: Adding 1 - failing because of invalid proposal (server-side)
      ansibleguy.opnsense.ipsec_connection:
        name: 'ANSIBLE_TEST_1_1'
        proposals: 'INVALID-IP'
      register: opn_fail1
      failed_when: not opn_fail1.failed
      when: not ansible_check_mode

    - name: Adding 1
      ansibleguy.opnsense.ipsec_connection:
        name: 'ANSIBLE_TEST_1_1'
        version: 'ikev2'
        unique: 'replace'
        proposals: ['default', 'aes256-sha256-modp2048', 'aes256gcm16-sha512-modp2048']
      register: opn1
      failed_when: >
        opn1.failed or
        not opn1.changed

    - name: Adding 1 - nothing changed
      ansibleguy.opnsense.ipsec_connection:
        name: 'ANSIBLE_TEST_1_1'
        version: 'ikev2'
        unique: 'replace'
        proposals: ['default', 'aes256-sha256-modp2048', 'aes256gcm16-sha512-modp2048']
      register: opn2
      failed_when: >
        opn2.failed or
        opn2.changed
      when: not ansible_check_mode

    - name: Changing 1
      ansibleguy.opnsense.ipsec_connection:
        name: 'ANSIBLE_TEST_1_1'
        unique: 'replace'
        proposals: 'aes256gcm16-sha512-modp2048'
        reauth_seconds: 3600
        keying_tries: 5
      register: opn3
      failed_when: >
        opn3.failed or
        not opn3.changed

    - name: Disabling 1
      ansibleguy.opnsense.ipsec_connection:
        name: 'ANSIBLE_TEST_1_1'
        unique: 'replace'
        proposals: 'aes256gcm16-sha512-modp2048'
        reauth_seconds: 3600
        keying_tries: 5
        enabled: false
      register: opn4
      failed_when: >
        opn4.failed or
        not opn4.changed
      when: not ansible_check_mode

    - name: Disabling 1 - nothing changed (w/ module alias)
      ansibleguy.opnsense.ipsec_tunnel:
        name: 'ANSIBLE_TEST_1_1'
        unique: 'replace'
        proposals: 'aes256gcm16-sha512-modp2048'
        reauth_seconds: 3600
        keying_tries: 5
        enabled: false
      when: not ansible_check_mode

    - name: Disabling 1 - nothing changed
      ansibleguy.opnsense.ipsec_connection:
        name: 'ANSIBLE_TEST_1_1'
        unique: 'replace'
        proposals: 'aes256gcm16-sha512-modp2048'
        reauth_seconds: 3600
        keying_tries: 5
        enabled: false
      register: opn5
      failed_when: >
        opn5.failed or
        opn5.changed
      when: not ansible_check_mode

    - name: Enabling 1
      ansibleguy.opnsense.ipsec_connection:
        name: 'ANSIBLE_TEST_1_1'
        unique: 'replace'
        proposals: 'aes256gcm16-sha512-modp2048'
        reauth_seconds: 3600
        keying_tries: 5
      register: opn6
      failed_when: >
        opn6.failed or
        not opn6.changed
      when: not ansible_check_mode

    - name: Adding 2
      ansibleguy.opnsense.ipsec_connection:
        name: 'ANSIBLE_TEST_1_2'
        unique: 'never'
        version: 'ikev1'
        reauth_seconds: 7200
        dpd_timeout_seconds: 7200
        dpd_delay_seconds: 7200
        over_seconds: 7200
        rekey_seconds: 7200
        keying_tries: 30
        encapsulation: true
        mobike: false
        aggressive: true
        local_addresses: ['192.168.1.1']
        remote_addresses: ['192.168.2.1', '192.168.3.1']
      register: opn7
      failed_when: >
        opn7.failed or
        not opn7.changed

    - name: Adding 2 - nothing changed
      ansibleguy.opnsense.ipsec_connection:
        name: 'ANSIBLE_TEST_1_2'
        unique: 'never'
        version: 'ikev1'
        reauth_seconds: 7200
        dpd_timeout_seconds: 7200
        dpd_delay_seconds: 7200
        over_seconds: 7200
        rekey_seconds: 7200
        keying_tries: 30
        encapsulation: true
        mobike: false
        aggressive: true
        local_addresses: ['192.168.1.1']
        remote_addresses: ['192.168.2.1', '192.168.3.1']
      register: opn8
      failed_when: >
        opn8.failed or
        opn8.changed
      when: not ansible_check_mode

    - name: Removing 2
      ansibleguy.opnsense.ipsec_connection:
        name: 'ANSIBLE_TEST_1_2'
        state: 'absent'
      register: opn9
      failed_when: >
        opn9.failed or
        not opn9.changed
      when: not ansible_check_mode

    - name: Listing
      ansibleguy.opnsense.list:
      register: opn10
      failed_when: >
        'data' not in opn10 or
        opn10.data | length != 1
      when: not ansible_check_mode

    - name: Cleanup
      ansibleguy.opnsense.ipsec_connection:
        name: "{{ item }}"
        state: 'absent'
      loop:
        - 'ANSIBLE_TEST_1_1'
        - 'ANSIBLE_TEST_1_2'
      when: not ansible_check_mode

    - name: Listing
      ansibleguy.opnsense.list:
      register: opn_clean1
      failed_when: >
        'data' not in opn_clean1 or
        opn_clean1.data | length != 0
      when: not ansible_check_mode

- name: Testing IPSec connection to pool linking
  hosts: localhost
  gather_facts: no
  module_defaults:
    group/ansibleguy.opnsense.all:
      firewall: "{{ lookup('ansible.builtin.env', 'TEST_FIREWALL') }}"
      api_credential_file: "{{ lookup('ansible.builtin.env', 'TEST_API_KEY') }}"
      ssl_verify: false

  tasks:
    - name: Adding dummy pool 1
      ansibleguy.opnsense.ipsec_pool:
        name: 'ANSIBLE_TEST_2_1'
        network: '192.168.2.0/29'
      when: not ansible_check_mode

    - name: Adding dummy pool 2
      ansibleguy.opnsense.ipsec_pool:
        name: 'ANSIBLE_TEST_2_2'
        network: '192.168.3.0/29'
      when: not ansible_check_mode

    - name: Adding connection linked to pool
      ansibleguy.opnsense.ipsec_connection:
        name: 'ANSIBLE_TEST_2_1'
        pools: ['ANSIBLE_TEST_2_1', 'ANSIBLE_TEST_2_2']
      register: opn11
      failed_when: >
        opn11.failed or
        not opn11.changed
      when: not ansible_check_mode

    - name: Nothing changed
      ansibleguy.opnsense.ipsec_connection:
        name: 'ANSIBLE_TEST_2_1'
        pools: ['ANSIBLE_TEST_2_2', 'ANSIBLE_TEST_2_1']
      register: opn13
      failed_when: >
        opn13.failed or
        opn13.changed
      when: not ansible_check_mode

    - name: Changing linked pools
      ansibleguy.opnsense.ipsec_connection:
        name: 'ANSIBLE_TEST_2_1'
        pools: ['ANSIBLE_TEST_2_1']
      register: opn12
      failed_when: >
        opn12.failed or
        not opn12.changed
      when: not ansible_check_mode

    - name: Cleanup connection
      ansibleguy.opnsense.ipsec_connection:
        name: 'ANSIBLE_TEST_2_1'
        state: 'absent'
      when: not ansible_check_mode

    - name: Cleanup pools
      ansibleguy.opnsense.ipsec_pool:
        name: "{{ item }}"
        state: 'absent'
      loop:
        - 'ANSIBLE_TEST_2_1'
        - 'ANSIBLE_TEST_2_2'
      when: not ansible_check_mode
