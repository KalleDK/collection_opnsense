---

- name: DHCP Reservation
  hosts: localhost
  gather_facts: no
  module_defaults:
    group/ansibleguy.opnsense.all:
      firewall: "{{ lookup('ansible.builtin.env', 'TEST_FIREWALL') }}"
      api_credential_file: "{{ lookup('ansible.builtin.env', 'TEST_API_KEY') }}"
      ssl_verify: false

    ansibleguy.opnsense.list:
      target: 'dhcp_reservation'

  tasks:
    # todo: add subnet via module

    - name: Listing
      ansibleguy.opnsense.list:
      register: opn_pre1
      failed_when: >
        'data' not in opn_pre1 or
        opn_pre1.data | length != 0

    - name: Removing - does not exist
      ansibleguy.opnsense.dhcp_reservation:
        subnet: '192.168.69.0/24'
        ip: '192.168.69.78'
        state: 'absent'
      register: opn_pre2
      failed_when: >
        opn_pre2.failed or
        opn_pre2.changed

    - name: Adding 1 - failing because of non-existent subnet
      ansibleguy.opnsense.dhcp_reservation:
        subnet: '192.168.59.0/24'
        ip: '192.168.59.76'
      register: opn_fail1
      failed_when: not opn_fail1.failed

    - name: Adding 1 - failing because of IP-address
      ansibleguy.opnsense.dhcp_reservation:
        subnet: '192.168.69.0/24'
        ip: '192.168.69.7x'
      register: opn_fail2
      failed_when: not opn_fail2.failed

    - name: Adding 1 - failing because of missing mac-address
      ansibleguy.opnsense.dhcp_reservation:
        subnet: '192.168.69.0/24'
        ip: '192.168.69.7x'
      register: opn_fail3
      failed_when: not opn_fail3.failed

    - name: Adding 1 - failing because of ip outside subnet (server-side)
      ansibleguy.opnsense.dhcp_reservation:
        subnet: '192.168.69.0/24'
        ip: '192.168.70.7'
      register: opn_fail4
      failed_when: not opn_fail4.failed
      when: not ansible_check_mode

    - name: Adding 1
      ansibleguy.opnsense.dhcp_reservation:
        subnet: '192.168.69.0/24'
        ip: '192.168.69.76'
        mac: 'aa:aa:aa:aa:aa:aa'
      register: opn1
      failed_when: >
        opn1.failed or
        not opn1.changed

    - name: Adding 1 - failing because of duplicate mac-address (server-side)
      ansibleguy.opnsense.dhcp_reservation:
        subnet: '192.168.69.0/24'
        ip: '192.168.69.77'
        mac: 'aa:aa:aa:aa:aa:aa'
      register: opn_fail4
      failed_when: not opn_fail4.failed
      when: not ansible_check_mode

    - name: Adding 2
      ansibleguy.opnsense.dhcp_reservation:
        subnet: '192.168.69.0/24'
        ip: '192.168.69.86'
        mac: 'aa:aa:aa:aa:aa:bb'
      register: opn2
      failed_when: >
        opn2.failed or
        not opn2.changed

    - name: Changing 2
      ansibleguy.opnsense.dhcp_reservation:
        subnet: '192.168.69.0/24'
        ip: '192.168.69.86'
        mac: 'aa:aa:aa:aa:aa:cc'
      register: opn3
      failed_when: >
        opn3.failed or
        not opn3.changed
      when: not ansible_check_mode

    - name: Changing 2 - Nothing changed
      ansibleguy.opnsense.dhcp_reservation:
        subnet: '192.168.69.0/24'
        ip: '192.168.69.86'
        mac: 'aa:aa:aa:aa:aa:cc'
      register: opn4
      failed_when: >
        opn4.failed or
        opn4.changed
      when: not ansible_check_mode

    - name: Listing
      ansibleguy.opnsense.list:
      register: opn8
      failed_when: >
        'data' not in opn8 or
        opn8.data | length != 2
      when: not ansible_check_mode

    - name: Removing 2
      ansibleguy.opnsense.dhcp_reservation:
        ip: '192.168.69.86'
        state: absent
      register: opn5
      failed_when: >
        opn5.failed or
        not opn5.changed
      when: not ansible_check_mode

    - name: Cleanup
      ansibleguy.opnsense.dhcp_reservation:
        ip: "{{ item }}"
        state: 'absent'
      loop:
        - '192.168.69.76'
        - '192.168.69.86'
      when: not ansible_check_mode

    - name: Listing
      ansibleguy.opnsense.list:
      register: opn_clean1
      failed_when: >
        'data' not in opn_clean1 or
        opn_clean1.data | length != 0
      when: not ansible_check_mode
