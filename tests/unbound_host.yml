---

# todo: test default matching

- name: Testing Unbound Host overrides
  hosts: localhost
  gather_facts: no
  module_defaults:
    group/ansibleguy.opnsense.all:
      firewall: "{{ lookup('ansible.builtin.env', 'TEST_FIREWALL') }}"
      api_credential_file: "{{ lookup('ansible.builtin.env', 'TEST_API_KEY') }}"
      ssl_verify: false

    ansibleguy.opnsense.unbound_host:
      match_fields: ['description']
      timeout: 60

    ansibleguy.opnsense.list:
      target: 'unbound_host'

  tasks:
    - name: Listing
      ansibleguy.opnsense.list:
      register: opn10
      failed_when: >
        'data' not in opn10 or
        opn10.data | length != 0

    - name: Removing - does not exist
      ansibleguy.opnsense.unbound_host:
        hostname: 'host'
        domain: 'opnsense.test.ansibleguy.net'
        value: '192.168.0.1'
        state: 'absent'
        reload: false
      register: opn1
      failed_when: >
        opn1.failed or
        opn1.changed

    - name: Adding - failing because of invalid values
      ansibleguy.opnsense.unbound_host:
        description: 'ANSIBLE_TEST_1_1'
        hostname: 'host'
        domain: 'opnsense.test.ansibleguy.net'
        value: "{{ item.v }}"
        type: "{{ item.t }}"
        reload: false
      register: opn_fail1
      failed_when: not opn_fail1.failed
      loop:
        - {t: 'A', v: 'not-an-ip'}
        - {t: 'A', v: "{'msg': '192.168.0.1', 'invalid': 'data'}"}
        - {t: 'A', v: '2001:db8::1'}
        - {t: 'AAAA', v: 'not-an-ip'}
        - {t: 'AAAA', v: '192.168.0.1'}
        - {t: 'MX', v: 'not-a-hostname'}
        - {t: 'MX', v: '192.168.0.1'}

    - name: Adding 1
      ansibleguy.opnsense.unbound_host:
        hostname: 'host'
        domain: 'opnsense.test.ansibleguy.net'
        value: '192.168.0.1'
        description: 'ANSIBLE_TEST_1_1'
        reload: false  # speed
      register: opn4
      failed_when: >
        opn4.failed or
        not opn4.changed

    - name: Disabling 1
      ansibleguy.opnsense.unbound_host:
        hostname: 'host'
        domain: 'opnsense.test.ansibleguy.net'
        value: '192.168.0.1'
        description: 'ANSIBLE_TEST_1_1'
        enabled: false
        reload: false  # speed
      register: opn6
      failed_when: >
        opn6.failed or
        not opn6.changed
      when: not ansible_check_mode

    - name: Disabling 1 - nothing changed
      ansibleguy.opnsense.unbound_host:
        hostname: 'host'
        domain: 'opnsense.test.ansibleguy.net'
        value: '192.168.0.1'
        description: 'ANSIBLE_TEST_1_1'
        enabled: false
        reload: false  # speed
      register: opn9
      failed_when: >
        opn9.failed or
        opn9.changed
      when: not ansible_check_mode

    - name: Enabling 1
      ansibleguy.opnsense.unbound_host:
        hostname: 'host'
        domain: 'opnsense.test.ansibleguy.net'
        value: '192.168.0.1'
        description: 'ANSIBLE_TEST_1_1'
        reload: false  # speed
      register: opn7
      failed_when: >
        opn7.failed or
        not opn7.changed
      when: not ansible_check_mode

    - name: Adding 2
      ansibleguy.opnsense.unbound_host:
        hostname: 'mx'
        domain: 'opnsense.test.ansibleguy.net'
        value: 'host.opnsense.test.ansibleguy.net'
        record_type: 'MX'
        prio: 5
        description: 'ANSIBLE_TEST_1_2'
        reload: false  # speed
      register: opn5
      failed_when: >
        opn5.failed or
        not opn5.changed

    - name: Adding 2 - nothing changed
      ansibleguy.opnsense.unbound_host:
        hostname: 'mx'
        domain: 'opnsense.test.ansibleguy.net'
        value: 'host.opnsense.test.ansibleguy.net'
        record_type: 'MX'
        prio: 5
        description: 'ANSIBLE_TEST_1_2'
        reload: false  # speed
      register: opn13
      failed_when: >
        opn13.failed or
        opn13.changed
      when: not ansible_check_mode

    - name: Removing 2
      ansibleguy.opnsense.unbound_host:
        description: 'ANSIBLE_TEST_1_2'
        hostname: 'dummy'
        domain: 'dummy'
        value: '192.168.0.1'
        state: 'absent'
        reload: false  # speed
      register: opn8
      failed_when: >
        opn8.failed or
        not opn8.changed
      when: not ansible_check_mode

    - name: Listing
      ansibleguy.opnsense.list:
      register: opn3
      failed_when: >
        'data' not in opn3 or
        opn3.data | length != 1
      when: not ansible_check_mode

    - name: Adding 3 - TLD-domain
      ansibleguy.opnsense.unbound_host:
        hostname: 'host'
        domain: 'local'
        value: '192.168.0.1'
        description: 'ANSIBLE_TEST_1_3'
        reload: false  # speed
      register: opn14
      failed_when: >
        opn14.failed or
        not opn14.changed

    - name: Cleanup
      ansibleguy.opnsense.unbound_host:
        description: "{{ item }}"
        hostname: 'dummy'
        domain: 'dummy'
        value: '192.168.0.1'
        state: 'absent'
        reload: false
      loop:
        - 'ANSIBLE_TEST_1_1'
        - 'ANSIBLE_TEST_1_2'
        - 'ANSIBLE_TEST_1_3'
      when: not ansible_check_mode

    - name: Listing
      ansibleguy.opnsense.list:
      register: opn2
      failed_when: >
        'data' not in opn2 or
        opn2.data | length != 0
      when: not ansible_check_mode
