---

- name: Testing Nginx upstream server
  hosts: localhost
  gather_facts: no
  module_defaults:
    group/ansibleguy.opnsense.all:
      firewall: "{{ lookup('ansible.builtin.env', 'TEST_FIREWALL') }}"
      api_credential_file: "{{ lookup('ansible.builtin.env', 'TEST_API_KEY') }}"
      ssl_verify: false

    ansibleguy.opnsense.list:
      target: 'nginx_upstream_server'

  tasks:
    - name: Listing
      ansibleguy.opnsense.list:
      register: opn_pre1
      failed_when: >
        'data' not in opn_pre1 or
        opn_pre1.data | length != 0

    - name: Removing - does not exist
      ansibleguy.opnsense.nginx_upstream_server:
        description: 'ANSIBLE@TEST1'
        state: 'absent'
      register: opn_pre2
      failed_when: >
        opn_pre2.failed or
        opn_pre2.changed

    - name: Adding 1 - failing because of missing server
      ansibleguy.opnsense.nginx_upstream_server:
        description: 'ANSIBLE@TEST1'
      register: opn_fail1
      failed_when: not opn_fail1.failed

    - name: Adding 1 - failing because of missing port
      ansibleguy.opnsense.nginx_upstream_server:
        description: 'ANSIBLE@TEST1'
        server: 192.168.1.1
      register: opn_fail1
      failed_when: not opn_fail1.failed

    - name: Adding 1 - failing because of missing priority
      ansibleguy.opnsense.nginx_upstream_server:
        description: 'ANSIBLE@TEST1'
        server: 192.168.1.1
        port: 80
      register: opn_fail1
      failed_when: not opn_fail1.failed

    - name: Adding 1 - should succeed
      ansibleguy.opnsense.nginx_upstream_server:
        description: 'ANSIBLE@TEST1'
        server: 192.168.1.1
        port: 80
        priority: 1

    - name: Remove 1 - should succeed
      ansibleguy.opnsense.nginx_upstream_server:
        description: 'ANSIBLE@TEST1'
        state: 'absent'
