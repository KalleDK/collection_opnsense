---

- name: Testing OpenVPN Client-Overwrite
  hosts: localhost
  gather_facts: no
  module_defaults:
    group/ansibleguy.opnsense.all:
      firewall: "{{ lookup('ansible.builtin.env', 'TEST_FIREWALL') }}"
      api_credential_file: "{{ lookup('ansible.builtin.env', 'TEST_API_KEY') }}"
      ssl_verify: false

    ansibleguy.opnsense.list:
      target: 'openvpn_client_override'

  tasks:
    - name: Adding Dummy Servers
      ansibleguy.opnsense.openvpn_server:
        name: 'ANSIBLE_TEST_3_1'
        server: '192.168.77.0/29'
        ca: 'OpenVPN'
        certificate: 'OpenVPN Server'
      when: not ansible_check_mode

    - name: Listing
      ansibleguy.opnsense.list:
      register: opn_pre1
      failed_when: >
        'data' not in opn_pre1 or
        opn_pre1.data | length != 0

    - name: Removing - does not exist
      ansibleguy.opnsense.openvpn_client_override:
        name: 'ANSIBLE_TEST_1_1'
        state: 'absent'
      register: opn_pre2
      failed_when: >
        opn_pre2.failed or
        opn_pre2.changed

    - name: Adding 1 - failing because no servers were provided
      ansibleguy.opnsense.openvpn_client_override:
        name: 'ANSIBLE_TEST_1_1'
      register: opn_fail1
      failed_when: not opn_fail1.failed

    - name: Adding 1
      ansibleguy.opnsense.openvpn_client_override:
        name: 'ANSIBLE_TEST_1_1'
        servers: 'ANSIBLE_TEST_3_1'
      register: opn1
      failed_when: >
        opn1.failed or
        not opn1.changed
      when: not ansible_check_mode

    - name: Changing 1
      ansibleguy.opnsense.openvpn_client_override:
        name: 'ANSIBLE_TEST_1_1'
        servers: 'ANSIBLE_TEST_3_1'
        block: true
        network_tunnel_ip4: '192.168.77.3/29'
        network_local: ['192.168.78.128/27']
        domain: 'test.vpn'
        dns_servers: ['1.1.1.1', '8.8.8.8']
      register: opn9
      failed_when: >
        opn9.failed or
        not opn9.changed
      when: not ansible_check_mode

    - name: Disabling 1
      ansibleguy.opnsense.openvpn_client_override:
        name: 'ANSIBLE_TEST_1_1'
        servers: 'ANSIBLE_TEST_3_1'
        block: true
        network_tunnel_ip4: '192.168.77.3/29'
        network_local: ['192.168.78.128/27']
        domain: 'test.vpn'
        dns_servers: ['1.1.1.1', '8.8.8.8']
        enabled: false
      register: opn2
      failed_when: >
        opn2.failed or
        not opn2.changed
      when: not ansible_check_mode

    - name: Disabling 1 - nothing changed
      ansibleguy.opnsense.openvpn_client_override:
        name: 'ANSIBLE_TEST_1_1'
        servers: 'ANSIBLE_TEST_3_1'
        block: true
        network_tunnel_ip4: '192.168.77.3/29'
        network_local: ['192.168.78.128/27']
        domain: 'test.vpn'
        dns_servers: ['1.1.1.1', '8.8.8.8']
        enabled: false
      register: opn3
      failed_when: >
        opn3.failed or
        opn3.changed
      when: not ansible_check_mode

    - name: Enabling 1
      ansibleguy.opnsense.openvpn_client_override:
        name: 'ANSIBLE_TEST_1_1'
        servers: 'ANSIBLE_TEST_3_1'
        block: true
        network_tunnel_ip4: '192.168.77.3/29'
        network_local: ['192.168.78.128/27']
        domain: 'test.vpn'
        dns_servers: ['1.1.1.1', '8.8.8.8']
      register: opn4
      failed_when: >
        opn4.failed or
        not opn4.changed
      when: not ansible_check_mode

    - name: Adding 2
      ansibleguy.opnsense.openvpn_client_override:
        name: 'ANSIBLE_TEST_1_2'
        servers: 'ANSIBLE_TEST_3_1'
        ntp_servers: '192.168.1.1'
        register_dns: true
        domain_list: ['internal', 'test.local']
      register: opn5
      failed_when: >
        opn5.failed or
        not opn5.changed
      when: not ansible_check_mode

    - name: Adding 2 - nothing changed
      ansibleguy.opnsense.openvpn_client_override:
        name: 'ANSIBLE_TEST_1_2'
        servers: 'ANSIBLE_TEST_3_1'
        ntp_servers: '192.168.1.1'
        register_dns: true
        domain_list: ['internal', 'test.local']
      when: not ansible_check_mode

    - name: Removing 2
      ansibleguy.opnsense.openvpn_client_override:
        name: 'ANSIBLE_TEST_1_2'
        state: 'absent'
      register: opn7
      failed_when: >
        opn7.failed or
        not opn7.changed
      when: not ansible_check_mode

    - name: Listing
      ansibleguy.opnsense.list:
      register: opn8
      failed_when: >
        'data' not in opn8 or
        opn8.data | length != 1
      when: not ansible_check_mode

    - name: Cleanup
      ansibleguy.opnsense.openvpn_client_override:
        name: "{{ item }}"
        state: 'absent'
      loop:
        - 'ANSIBLE_TEST_1_1'
        - 'ANSIBLE_TEST_1_2'
      when: not ansible_check_mode

    - name: Cleanup Server
      ansibleguy.opnsense.openvpn_server:
        name: 'ANSIBLE_TEST_3_1'
        state: 'absent'
      when: not ansible_check_mode

    - name: Listing
      ansibleguy.opnsense.list:
      register: opn_post1
      failed_when: >
        'data' not in opn_post1 or
        opn_post1.data | length != 0
      when: not ansible_check_mode
